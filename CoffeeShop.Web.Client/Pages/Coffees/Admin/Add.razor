@page "/coffees/add"
@page "/coffees/admin/add"
@attribute [Authorize(Roles = CoffeeShop.Common.Constants.AdminRole)]
@inject NavigationManager NavigationManager
@inject ICoffeeSpeciesService CoffeeSpeciesService
@inject ICoffeesService CoffeesService

@if (_coffeeSpecies is null)
{
    <span>Загрузка...</span>
}
else
{
    <section class="section-pagetop bg">
        <div class="container">
            <h2 class="title-page text-center">Добавление кофе</h2>
        </div>
    </section>

    <section class="section-content padding-y bg">
        <div class="container">
            <div class="row">
                <div class="card mx-auto">
                    <article class="card-body">

                        <EditForm Model="_model" OnValidSubmit="OnValidSubmitAsync">

                            <DataAnnotationsValidator />

                            <div class="form-group">
                                <label>Наименование</label>
                                <InputText @bind-Value="_model.Name" type="text" class="form-control" />
                                <ValidationMessage For="(() => _model.Name)" />
                            </div>

                            <div class="form-group">
                                <label>Вид зёрен</label>
                                <InputSelectNumber @bind-Value="_model.CoffeeSpeciesId" class="form-control">
                                    @foreach (var cs in _coffeeSpecies)
                                    {
                                        <option value="@cs.Id">@cs.DisplayName</option>
                                    }
                                </InputSelectNumber>
                                <ValidationMessage For="(() => _model.CoffeeSpeciesId)" />
                            </div>

                            <div class="form-row">
                                <div class="col form-group">
                                    <label>Стоимость (RUB)</label>
                                    <InputNumber @bind-Value="_model.UnitSellPriceRoubles" type="number" class="form-control" />
                                    <ValidationMessage For="(() => _model.UnitSellPriceRoubles)" />
                                </div>
                            </div>

                            <p></p>
                            <div class="form-group">
                                <button type="submit" class="btn btn-block btn-primary">Добавить</button>
                            </div>

                        </EditForm>

                    </article>
                </div>
            </div>
        </div>
    </section>
}


@code {
    private readonly CoffeeRequestModel _model = new();
    private IEnumerable<CoffeeSpeciesResponseModel>? _coffeeSpecies;

    protected override async Task OnInitializedAsync()
    {
        _coffeeSpecies = await CoffeeSpeciesService.GetAllAsync();
        _model.CoffeeSpeciesId = _coffeeSpecies.First().Id;
    }


    private async Task OnValidSubmitAsync()
    {
        var response = await CoffeesService.CreateAsync(_model);
        NavigationManager.NavigateTo($"/coffees/{response.Data.Id}");
    }
}